diff --git a/config.mk b/config.mk
index ff9e508..04f1cf7 100644
--- a/config.mk
+++ b/config.mk
@@ -28,7 +28,7 @@ LIBS = -L${X11LIB} -lX11 ${XINERAMALIBS} ${FREETYPELIBS} -lX11-xcb -lxcb -lxcb-r
 # flags
 CPPFLAGS = -D_DEFAULT_SOURCE -D_BSD_SOURCE -D_POSIX_C_SOURCE=200809L -DVERSION=\"${VERSION}\" ${XINERAMAFLAGS}
 #CFLAGS   = -g -std=c99 -pedantic -Wall -O0 ${INCS} ${CPPFLAGS}
-CFLAGS   = -std=c99 -pedantic -Wall -Wno-deprecated-declarations -Os ${INCS} ${CPPFLAGS}
+CFLAGS   = -std=c99 -pedantic -Wall -Wno-deprecated-declarations -O0 ${INCS} ${CPPFLAGS}
 LDFLAGS  = ${LIBS}
 
 # Solaris
diff --git a/dwm.c b/dwm.c
index d63c792..7ab01f6 100644
--- a/dwm.c
+++ b/dwm.c
@@ -298,7 +298,9 @@ static void xrdb_read(void);
 static void zoom(const Arg *arg);
 
 static pid_t getparentprocess(pid_t p);
-static int isdescprocess(pid_t p, pid_t c);
+static int isdescprocess(pid_t parent, pid_t child);
+static int is_a_tmux_server(pid_t pid);
+static long get_tmux_client_pid(long shell_pid);
 static Client *swallowingclient(Window w);
 static Client *termforwin(const Client *c);
 static pid_t winpid(Window w);
@@ -2662,7 +2664,7 @@ getparentprocess(pid_t p)
 	if (!(f = fopen(buf, "r")))
 		return 0;
 
-	fscanf(f, "%*u %*s %*c %u", &v);
+	fscanf(f, "%*u (%*[^)]) %*c %u", &v);
 	fclose(f);
 #endif /* __linux__*/
 
@@ -2683,12 +2685,49 @@ getparentprocess(pid_t p)
 }
 
 int
-isdescprocess(pid_t p, pid_t c)
+isdescprocess(pid_t parent, pid_t child)
 {
-	while (p != c && c != 0)
-		c = getparentprocess(c);
+	pid_t parent_tmp;
+	while (child != parent && child != 0) {
+		parent_tmp = getparentprocess(child);
+		if (is_a_tmux_server(parent_tmp))
+			child = get_tmux_client_pid(child);
+		else
+			child = parent_tmp;
+	}
+	return (int)child;
+}
+
+int
+is_a_tmux_server(pid_t pid)
+{
+	char path[256];
+	char name[15];
+	FILE* stat;
+
+	snprintf(path, sizeof(path) - 1, "/proc/%u/stat", (unsigned)pid);
 
-	return (int)c;
+	if (!(stat = fopen(path, "r")))
+		return 0;
+
+	fscanf(stat, "%*u (%12[^)])", name);
+	fclose(stat);
+	return (strcmp(name, "tmux: server") == 0);
+}
+
+/* parameter "shell_pid" is the pid of a direct child
+ * of the tmux's server process, which usually is a shell process. */
+long
+get_tmux_client_pid(long shell_pid)
+{
+	long pane_pid, client_pid;
+	FILE* list = popen("tmux list-clients -F '#{pane_pid} #{client_pid}'", "r");
+	if (!list)
+		return 0;
+	while (!feof(list) && pane_pid != shell_pid)
+		fscanf(list, "%ld %ld\n", &pane_pid, &client_pid);
+	pclose(list);
+	return client_pid;
 }
 
 Client *
